// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    
    Or(a=reset, b=load, out=temp2);
    Not(in=temp2, out=sel1);
    
    Not(in=inc, out=notc);
    Not(in=reset, out=notr);
    Or(a=load, b=notc, out=temp3);
    And(a=notr, b=temp3, out=sel0);

    Inc16(in=lastOut, out=incrIn);
    Mux4Way16(a=false, b=in, c=incrIn, d=lastOut, sel[1]=sel1,sel[0]=sel0, out=hmmIn);

    Register(in=hmmIn, load=true /*Alternatively, we can do or(inc,or(load,reset))*/, out=lastOut, out=out);
}
